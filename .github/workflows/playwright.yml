name: Playwright CI
permissions: {}
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    name: E2E Tests with Playwright
    timeout-minutes: 60
    runs-on: ubuntu-latest
    permissions:
      contents: read
      attestations: write
    
    services:
      postgres:
        image: postgres:17-alpine
        env:
          POSTGRES_PASSWORD: super_strong_ultimate_security_password
          POSTGRES_USER: phainon
          POSTGRES_DB: twilight
        ports:
          - 127.0.0.1:5432:5432

    strategy:
      matrix:
        node-version: [ 20.x, 22.x, 24.x ]

    steps:
      - uses: actions/checkout@v4

      - name: Create .env file
        run: | 
          echo "DATABASE_URL=\"postgresql://phainon:super_strong_ultimate_security_password@127.0.0.1:5432/twilight\"" > .env
          echo "DIRECT_DATABASE_URL=\"postgresql://phainon:super_strong_ultimate_security_password@127.0.0.1:5432/twilight\"" >> .env

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install pnpm
        run: corepack disable && npm install -g pnpm

      - name: Install dependencies
        run: pnpm install
      
      - name: Build the project
        run: pnpm build

      - name: Install Playwright Browsers
        run: pnpm exec playwright install --with-deps

      - name: Execute Prisma migrations
        run: pnpm exec prisma migrate deploy

      - name: Run Playwright tests
        run: pnpm exec playwright test

      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report-node-${{ matrix.node-version }}
          path: playwright-report/
          retention-days: 30
